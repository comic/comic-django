# Generated by Django 3.0.2 on 2020-03-30 13:38

import uuid

import django_extensions.db.fields
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("challenges", "0023_auto_20200123_1102"),
        ("algorithms", "0024_auto_20200227_1744"),
        ("reader_studies", "0014_readerstudy_case_text"),
        ("archives", "0005_auto_20200322_0922"),
    ]

    operations = [
        migrations.CreateModel(
            name="OverviewPage",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "title",
                    models.CharField(max_length=255, verbose_name="title"),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, null=True, verbose_name="description"
                    ),
                ),
                (
                    "slug",
                    django_extensions.db.fields.AutoSlugField(
                        blank=True,
                        editable=False,
                        populate_from="title",
                        verbose_name="slug",
                    ),
                ),
                ("detail_page_markdown", models.TextField(blank=True)),
                (
                    "algorithms",
                    models.ManyToManyField(
                        blank=True, to="algorithms.Algorithm"
                    ),
                ),
                (
                    "archives",
                    models.ManyToManyField(blank=True, to="archives.Archive"),
                ),
                (
                    "challenges",
                    models.ManyToManyField(
                        blank=True, to="challenges.Challenge"
                    ),
                ),
                (
                    "reader_studies",
                    models.ManyToManyField(
                        blank=True, to="reader_studies.ReaderStudy"
                    ),
                ),
            ],
            options={"ordering": ("-created",), "abstract": False},
        ),
    ]
