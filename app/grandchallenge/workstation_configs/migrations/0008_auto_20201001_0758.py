# Generated by Django 3.1.1 on 2020-10-01 07:58

from django.db import migrations, models

import grandchallenge.core.validators


class Migration(migrations.Migration):

    dependencies = [
        ("workstation_configs", "0007_workstationconfig_key_bindings"),
    ]

    operations = [
        migrations.AlterField(
            model_name="workstationconfig",
            name="key_bindings",
            field=models.JSONField(
                blank=True,
                default=list,
                validators=[
                    grandchallenge.core.validators.JSONSchemaValidator(
                        schema={
                            "$id": "http://example.com/example.json",
                            "$schema": "http://json-schema.org/draft-06/schema",
                            "description": "Define the key bindings for the workstation.",
                            "items": {
                                "$id": "#/items",
                                "additionalProperties": False,
                                "default": {},
                                "description": "Defines a key binding for a command.",
                                "examples": [
                                    {
                                        "command": "editor.action.deleteLines",
                                        "key": "ctrl+shift+k",
                                        "when": "editorTextFocus",
                                    }
                                ],
                                "properties": {
                                    "command": {
                                        "$id": "#/items/properties/command",
                                        "default": "",
                                        "description": "The command called by this binding.",
                                        "examples": [
                                            "editor.action.deleteLines"
                                        ],
                                        "title": "The Command Schema",
                                        "type": "string",
                                    },
                                    "key": {
                                        "$id": "#/items/properties/key",
                                        "default": "",
                                        "description": "The keys used for this binding.",
                                        "examples": ["ctrl+shift+k"],
                                        "title": "The Key Schema",
                                        "type": "string",
                                    },
                                    "when": {
                                        "$id": "#/items/properties/when",
                                        "default": "",
                                        "description": "The condition that must be met for this command to be called.",
                                        "examples": ["editorTextFocus"],
                                        "title": "The When Schema",
                                        "type": "string",
                                    },
                                },
                                "required": ["key", "command"],
                                "title": "The Key Binding Schema",
                                "type": "object",
                            },
                            "title": "The Key Bindings Schema",
                            "type": "array",
                        }
                    )
                ],
            ),
        ),
        migrations.AlterField(
            model_name="workstationconfig",
            name="overlay_segments",
            field=models.JSONField(
                blank=True,
                default=list,
                validators=[
                    grandchallenge.core.validators.JSONSchemaValidator(
                        schema={
                            "$id": "http://example.com/example.json",
                            "$schema": "http://json-schema.org/draft-06/schema",
                            "description": "Define the overlay segments for the LUT.",
                            "items": {
                                "$id": "#/items",
                                "additionalProperties": False,
                                "default": {},
                                "description": "Defines what each segment of the LUT represents.",
                                "examples": [
                                    {
                                        "metric_template": "{{metrics.volumes[0]}} mm³",
                                        "name": "Metastasis",
                                        "visible": True,
                                        "voxel_value": 1,
                                    }
                                ],
                                "properties": {
                                    "metric_template": {
                                        "$id": "#/items/properties/metric_template",
                                        "default": "",
                                        "description": "The jinja template to determine which property from the results.json should be used as the label text.",
                                        "examples": [
                                            "{{metrics.volumes[0]}} mm³"
                                        ],
                                        "title": "The Metric Template Schema",
                                        "type": "string",
                                    },
                                    "name": {
                                        "$id": "#/items/properties/name",
                                        "default": "",
                                        "description": "What this segment should be called.",
                                        "examples": ["Metastasis"],
                                        "title": "The Name Schema",
                                        "type": "string",
                                    },
                                    "visible": {
                                        "$id": "#/items/properties/visible",
                                        "default": True,
                                        "description": "Whether this segment is visible by default.",
                                        "examples": [True],
                                        "title": "The Visible Schema",
                                        "type": "boolean",
                                    },
                                    "voxel_value": {
                                        "$id": "#/items/properties/voxel_value",
                                        "default": 0,
                                        "description": "The value of the LUT for this segment.",
                                        "examples": [1],
                                        "title": "The Voxel Value Schema",
                                        "type": "integer",
                                    },
                                },
                                "required": ["voxel_value", "name", "visible"],
                                "title": "The Segment Schema",
                                "type": "object",
                            },
                            "title": "The Overlay Segments Schema",
                            "type": "array",
                        }
                    )
                ],
            ),
        ),
    ]
