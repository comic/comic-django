user cwww;
worker_processes auto;

error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
  worker_connections 1024; # increase if you have lots of clients
  accept_mutex on; # set to 'off' if nginx worker_processes == 1
  use epoll;
}

http {
  server_tokens off;

  include /etc/nginx/mime.types;

  default_type application/octet-stream;

  charset_types
    text/css
    text/plain
    text/vnd.wap.wml
    application/javascript
    application/json
    application/rss+xml
    application/xml;

  access_log /var/log/nginx/access.log combined;

  keepalive_timeout 20s;
  
  sendfile ${SENDFILE_STATUS};
  sendfile_max_chunk 512k;

  # SSL
  ssl_certificate /etc/ssl/certs/${SERVER_NAME}.crt;
  ssl_certificate_key /etc/ssl/private/${SERVER_NAME}.key;
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
  ssl_prefer_server_ciphers on;
  ssl_dhparam /etc/ssl/private/dhparams.pem;
  ssl_session_cache shared:SSL:10m;

  tcp_nopush      on;

  gzip on;
  gzip_comp_level    5;
  gzip_min_length    256;
  gzip_proxied       any;
  gzip_vary          on;
  gzip_types
    application/atom+xml
    application/javascript
    application/json
    application/ld+json
    application/manifest+json
    application/rss+xml
    application/vnd.geo+json
    application/vnd.ms-fontobject
    application/x-font-ttf
    application/x-web-app-manifest+json
    application/xhtml+xml
    application/xml
    font/opentype
    image/bmp
    image/svg+xml
    image/x-icon
    text/cache-manifest
    text/css
    text/plain
    text/vcard
    text/vnd.rim.location.xloc
    text/vtt
    text/x-component
    text/x-cross-domain-policy;

  upstream app_server {
    server web:8000;
  }

  server {
    # Redirect everything to https
    listen 80;
    listen [::]:80;

    server_name .${SERVER_NAME};

    return 301 https://$host$request_uri;
  }

  server {
    # Remove the www and mobile subdomains
    listen 443 ssl;
    listen [::]:443 ssl;

    server_name www.${SERVER_NAME} mobile.${SERVER_NAME} m.${SERVER_NAME};

    return 301 $scheme://${SERVER_NAME}$request_uri;
  }

  server {
    # Rewrite subdomain uris
    listen 443 ssl;
    listen [::]:443 ssl;
    
    client_body_buffer_size 16m;
    client_max_body_size 0;

    server_name ~^(?<project>.*).${SERVER_NAME};

    if ($uri !~ ^/.*(.css|.js) ) {
      # If we're not looking for css or js then add a slash at the end of the url
      rewrite ^(.*[^/])$ $1/ permanent;
    }

    location ~ ^/(static|site|accounts|socialauth|dbox|media|challenges|cases|algorithms|summernote)/ {
      proxy_pass $scheme://127.0.0.1$request_uri;
      proxy_set_header Host ${SERVER_NAME};
    }

    location / {
      proxy_pass $scheme://127.0.0.1/site/$project$request_uri;
      proxy_set_header Host $host;
    }
  } 

  server {
    # Try to serve files, otherwise proxy to app
    listen 443 ssl default_server;
    listen [::]:443 ssl default_server;

    client_body_buffer_size 16m;
    client_max_body_size 0;

    server_name .${SERVER_NAME};

    location ~* ^/site/([^/]*)/serve/(.*)$ {
      return 302 $scheme://$1.${SERVER_NAME}/media/$1/$2;
    }

    location ~* ^/all_challenges/?$ {
      return 301 $scheme://${SERVER_NAME}/challenges/;
    }
    
    location /dbox/ {
      internal;
      alias   /dbox/;
    }

    location /static/ {
      root /srv/public/;

      rewrite ^/(.*)/$ /$1 break;

      expires 1h;
      add_header Cache-Control public;

      try_files $uri =404;
    }

    location / {
      rewrite ^(.*[^/])$ $1/ break;

      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $host;
      proxy_redirect off;
      proxy_pass http://app_server;
    }

    error_page 500 502 503 504 /500.html;
    location = /500.html {
      root /http/;
    }
  }
}
